rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == "admin@techfusion.com";
    }

    // Helper function to check if user is accessing their own data
    function isOwnData() {
      return request.auth != null && request.auth.token.email == resource.data.email;
    }

    // Helper function to check if user is accessing their own payment
    function isOwnPayment() {
      return request.auth != null && request.auth.token.email == resource.data.userEmail;
    }

    // Allow authenticated users to read and create participants
    match /participants/{participantId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      // Allow users to update their own data
      allow update: if isAdmin() || isOwnData();
      allow delete: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Payment collection rules
    match /payments/{paymentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Contest questions collection rules
    match /questions/{questionId} {
      // Admins can do everything
      allow create, update, delete: if isAdmin();

      // Admins can read all questions
      // Regular users can only read active questions
      allow read: if isAdmin() ||
        (request.auth != null &&
         resource.data.isActive == true);
    }

    // Question submissions collection rules
    match /submissions/{submissionId} {
      // Admins can do everything
      allow create, update, delete: if isAdmin();

      // Users can create their own submissions
      allow create: if request.auth != null &&
                     request.resource.data.participantId != null;

      // Users can read their own submissions, admins can read all
      allow read: if isAdmin() ||
                  (request.auth != null && (
                    // Case 1: participantId is the user's email
                    resource.data.participantId == request.auth.token.email ||

                    // Case 2: participantId is the document ID of a participant with matching email
                    (resource.data.participantId != null &&
                     exists(/databases/$(database)/documents/participants/$(resource.data.participantId)) &&
                     get(/databases/$(database)/documents/participants/$(resource.data.participantId)).data.email == request.auth.token.email) ||

                    // Case 3: participantId is the user's UID
                    resource.data.participantId == request.auth.uid
                  ));
    }
  }
}
